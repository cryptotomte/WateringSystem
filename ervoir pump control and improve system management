[1mdiff --git a/src/main.cpp b/src/main.cpp[m
[1mindex fd33ff5..4a7a1ae 100644[m
[1m--- a/src/main.cpp[m
[1m+++ b/src/main.cpp[m
[36m@@ -27,8 +27,9 @@[m
 #define PIN_RS485_TX          16[m
 #define PIN_RS485_RX          17[m
 #define PIN_RS485_DE          25[m
[31m-#define PIN_PUMP_CONTROL      26[m
[31m-#define PIN_STATUS_LED        27[m
[32m+[m[32m#define PIN_MAIN_PUMP_CONTROL 26[m
[32m+[m[32m#define PIN_RESERVOIR_PUMP_CONTROL 27  // Added new pin for reservoir pump[m
[32m+[m[32m#define PIN_STATUS_LED        2       // Changed to a new pin since PIN_RESERVOIR_PUMP_CONTROL now uses pin 27[m
 #define PIN_BUTTON_MANUAL     4[m
 #define PIN_BUTTON_CONFIG     5[m
 [m
[36m@@ -49,10 +50,11 @@[m [mBME280Sensor envSensor(BME280_I2C_ADDR, "BME280");[m
 HardwareSerial rs485Serial(2);  // Using UART2 for RS485[m
 SP3485ModbusClient modbusClient(&rs485Serial, PIN_RS485_DE);[m
 ModbusSoilSensor soilSensor(&modbusClient, SOIL_SENSOR_MODBUS_ADDR, "SoilSensor");[m
[31m-WaterPump waterPump(PIN_PUMP_CONTROL, "MainPump");[m
[32m+[m[32mWaterPump plantPump(PIN_MAIN_PUMP_CONTROL, "PlantPump");         // Renamed for clarity[m
[32m+[m[32mWaterPump reservoirPump(PIN_RESERVOIR_PUMP_CONTROL, "ReservoirPump"); // Added new pump for filling reservoir[m
 LittleFSStorage dataStorage;[m
[31m-WateringController controller(&envSensor, &soilSensor, &waterPump, &dataStorage);[m
[31m-WateringSystemWebServer webServer(&controller, &envSensor, &soilSensor, &waterPump, &dataStorage, WEB_SERVER_PORT);[m
[32m+[m[32mWateringController controller(&envSensor, &soilSensor, &plantPump, &dataStorage);[m
[32m+[m[32mWateringSystemWebServer webServer(&controller, &envSensor, &soilSensor, &plantPump, &dataStorage, WEB_SERVER_PORT);[m
 [m
 // System state[m
 unsigned long lastStatusUpdate = 0;[m
[36m@@ -286,7 +288,7 @@[m [mvoid handleButtons() {[m
     Serial.println("Manual watering button pressed");[m
     [m
     // Toggle the pump[m
[31m-    if (waterPump.isRunning()) {[m
[32m+[m[32m    if (plantPump.isRunning()) {[m
       controller.stopWatering();[m
       Serial.println("Manual watering stopped");[m
     } else {[m
[36m@@ -348,7 +350,7 @@[m [mvoid updateStatus() {[m
   }[m
   [m
   // Report pump status[m
[31m-  Serial.printf("Pump status: %s\n", waterPump.isRunning() ? [m
[32m+[m[32m  Serial.printf("Pump status: %s\n", plantPump.isRunning() ?[m[41m [m
                                      "Running" : "Stopped");[m
   [m
   // Report system status[m
[36m@@ -467,7 +469,7 @@[m [mvoid loop() {[m
   if (apMode) {[m
     // Fast blinking in AP mode[m
     digitalWrite(PIN_STATUS_LED, ((millis() / 200) % 2) ? HIGH : LOW);[m
[31m-  } else if (waterPump.isRunning()) {[m
[32m+[m[32m  } else if (plantPump.isRunning()) {[m
     // Medium blinking when pump is running[m
     digitalWrite(PIN_STATUS_LED, ((millis() / 500) % 2) ? HIGH : LOW);[m
   } else {[m
